<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20232.23.0611.2007                               -->
<workbook original-version='18.1' source-build='2023.2.0 (20232.23.0611.2007)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Credit card transactions' inline='true' name='federated.1n692ox0pj7gxs18jxkcu15thfy1' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Credit card transactions' name='textscan.1768rgo0wejmyk15d655z0duminp'>
            <connection class='textscan' directory='C:/Users/Abhisekh/Desktop/BIG DATA' filename='Credit card transactions.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1768rgo0wejmyk15d655z0duminp' name='Credit card transactions - India - Simple.csv' table='[Credit card transactions - India - Simple#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='index' ordinal='0' />
            <column datatype='string' name='City' ordinal='1' />
            <column datatype='date' name='Date' ordinal='2' />
            <column datatype='string' name='Card Type' ordinal='3' />
            <column datatype='string' name='Exp Type' ordinal='4' />
            <column datatype='boolean' name='Gender' ordinal='5' />
            <column datatype='integer' name='Amount' ordinal='6' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1768rgo0wejmyk15d655z0duminp' name='Credit card transactions - India - Simple.csv' table='[Credit card transactions - India - Simple#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='index' ordinal='0' />
            <column datatype='string' name='City' ordinal='1' />
            <column datatype='date' name='Date' ordinal='2' />
            <column datatype='string' name='Card Type' ordinal='3' />
            <column datatype='string' name='Exp Type' ordinal='4' />
            <column datatype='boolean' name='Gender' ordinal='5' />
            <column datatype='integer' name='Amount' ordinal='6' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Credit card transactions - India - Simple.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>index</remote-name>
            <remote-type>20</remote-type>
            <local-name>[index]</local-name>
            <parent-name>[Credit card transactions - India - Simple.csv]</parent-name>
            <remote-alias>index</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Credit card transactions - India - Simple.csv_5A8A56E197A94106B0ED3CADCB5CDF64]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Credit card transactions - India - Simple.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Credit card transactions - India - Simple.csv_5A8A56E197A94106B0ED3CADCB5CDF64]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[Credit card transactions - India - Simple.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Credit card transactions - India - Simple.csv_5A8A56E197A94106B0ED3CADCB5CDF64]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Card Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Card Type]</local-name>
            <parent-name>[Credit card transactions - India - Simple.csv]</parent-name>
            <remote-alias>Card Type</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Credit card transactions - India - Simple.csv_5A8A56E197A94106B0ED3CADCB5CDF64]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Exp Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Exp Type]</local-name>
            <parent-name>[Credit card transactions - India - Simple.csv]</parent-name>
            <remote-alias>Exp Type</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Credit card transactions - India - Simple.csv_5A8A56E197A94106B0ED3CADCB5CDF64]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gender</remote-name>
            <remote-type>11</remote-type>
            <local-name>[Gender]</local-name>
            <parent-name>[Credit card transactions - India - Simple.csv]</parent-name>
            <remote-alias>Gender</remote-alias>
            <ordinal>5</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Credit card transactions - India - Simple.csv_5A8A56E197A94106B0ED3CADCB5CDF64]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Amount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Amount]</local-name>
            <parent-name>[Credit card transactions - India - Simple.csv]</parent-name>
            <remote-alias>Amount</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Credit card transactions - India - Simple.csv_5A8A56E197A94106B0ED3CADCB5CDF64]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Amount]' role='measure' type='quantitative' />
      <column caption='Gender ' datatype='string' name='[Calculation_85849910205747201]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Gender] = FALSE THEN &quot;Female&quot;&#13;&#10;ELSE &quot;Male&quot;&#13;&#10;END' />
      </column>
      <column caption='Card Type1' datatype='string' name='[Card Type]' role='dimension' type='nominal' />
      <column caption='Cities' datatype='string' name='[City - Split 1]' role='dimension' semantic-role='[City].[Name]' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1n692ox0pj7gxs18jxkcu15thfy1].[City]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [City], &quot;,&quot;, 1 ) )' />
      </column>
      <column caption='City1' datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <semantic-values semantic-role='[City].[Name]'>
          <semantic-value key='&quot;Ahmedabad, India&quot;' value='&quot;Ahmadabad&quot;' />
          <semantic-value key='&quot;Bahraich, India&quot;' value='&quot;Bahraich&quot;' />
          <semantic-value key='&quot;Bengaluru, India&quot;' value='&quot;Bengaluru&quot;' />
          <semantic-value key='&quot;Changanassery, India&quot;' value='&quot;Changanacheri&quot;' />
          <semantic-value key='&quot;Delhi, India&quot;' value='&quot;New Delhi&quot;' />
          <semantic-value key='&quot;Fazilka, India&quot;' value='&quot;Fazilka&quot;' />
          <semantic-value key='&quot;Greater Mumbai, India&quot;' value='&quot;Mumbai&quot;' />
          <semantic-value key='&quot;Kolkata, India&quot;' value='&quot;Kolkata&quot;' />
          <semantic-value key='&quot;Mahbubnagar, India&quot;' value='&quot;Mahbubnagar&quot;' />
          <semantic-value key='&quot;Tirur, India&quot;' value='&quot;Tirur&quot;' />
        </semantic-values>
      </column>
      <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
      <column caption='Exp Type1' datatype='string' name='[Exp Type]' role='dimension' type='nominal' />
      <column caption='Gender1' datatype='boolean' name='[Gender]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Credit card transactions - India - Simple.csv' datatype='table' name='[__tableau_internal_object_id__].[Credit card transactions - India - Simple.csv_5A8A56E197A94106B0ED3CADCB5CDF64]' role='measure' type='quantitative' />
      <column caption='Index' datatype='integer' name='[index]' role='measure' type='quantitative' />
      <column-instance column='[Date]' derivation='Quarter-Trunc' name='[tqr:Date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Cities)' hidden='true' name='[Action (Cities)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[City - Split 1]' />
        </groupfilter>
      </group>
      <group caption='Action (Gender ,QUARTER(Date))' hidden='true' name='[Action (Gender ,QUARTER(Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_85849910205747201]' />
          <groupfilter function='level-members' level='[tqr:Date:ok]' />
        </groupfilter>
      </group>
      <group caption='Botto 5 cities by transaction' name='[Botto 5 cities by transaction]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='5' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='COUNT([__tableau_internal_object_id__].[Credit card transactions - India - Simple.csv_5A8A56E197A94106B0ED3CADCB5CDF64])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[City - Split 1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='Bottom 5 cities by amount' name='[Bottom 5 cities by amount]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='5' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='SUM([Amount])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[City - Split 1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='Combined transaction' delimiter=',' name='[Set 1]' name-style='unqualified'>
        <groupfilter function='union'>
          <groupfilter field='[Top 5 cities by transaction]' function='reference' />
          <groupfilter field='[Botto 5 cities by transaction]' function='reference' />
        </groupfilter>
      </group>
      <group caption='Combined by amount' delimiter=',' name='[Set 2]' name-style='unqualified'>
        <groupfilter function='union'>
          <groupfilter field='[Top 5 cities by amount]' function='reference' />
          <groupfilter field='[Bottom 5 cities by amount]' function='reference' />
        </groupfilter>
      </group>
      <group caption='Top 5 cities by amount' name='[Top 5 cities by amount]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='SUM([Amount])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[City - Split 1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='Top 5 cities by transaction' name='[Top 5 cities by transaction]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='COUNT([__tableau_internal_object_id__].[Credit card transactions - India - Simple.csv_5A8A56E197A94106B0ED3CADCB5CDF64])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[City - Split 1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[City].[Name]' value='%null%' />
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Credit card transactions - India - Simple.csv' id='Credit card transactions - India - Simple.csv_5A8A56E197A94106B0ED3CADCB5CDF64'>
            <properties context=''>
              <relation connection='textscan.1768rgo0wejmyk15d655z0duminp' name='Credit card transactions - India - Simple.csv' table='[Credit card transactions - India - Simple#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='index' ordinal='0' />
                  <column datatype='string' name='City' ordinal='1' />
                  <column datatype='date' name='Date' ordinal='2' />
                  <column datatype='string' name='Card Type' ordinal='3' />
                  <column datatype='string' name='Exp Type' ordinal='4' />
                  <column datatype='boolean' name='Gender' ordinal='5' />
                  <column datatype='integer' name='Amount' ordinal='6' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_09169E6F267046C68E8B1F85234B63DB]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard ' type='sheet' worksheet='Line chart' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard ' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2_C8195450D8E14D798A4DC8C903217C62]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard ' type='sheet' worksheet='Card Type Payment' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard ' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3_BFC7D3E6566542D1A3058ECF9BD34563]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard ' type='sheet' worksheet='Transactions' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard ' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4_D36D7D06A6E3402B8236348457C16370]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard ' type='sheet' worksheet='Map visualization of amount' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard ' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action5_2360AD817EE24240A62360D3DD508653]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard ' type='sheet' worksheet='Expenditure type' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard ' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Card Type Payment'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#00aa00' fontname='Wide Latin'>Card Type Payments</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Credit card transactions' name='federated.1n692ox0pj7gxs18jxkcu15thfy1' />
          </datasources>
          <datasource-dependencies datasource='federated.1n692ox0pj7gxs18jxkcu15thfy1'>
            <column caption='Card Type1' datatype='string' name='[Card Type]' role='dimension' type='nominal' />
            <column caption='Cities' datatype='string' name='[City - Split 1]' role='dimension' semantic-role='[City].[Name]' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1n692ox0pj7gxs18jxkcu15thfy1].[City]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [City], &quot;,&quot;, 1 ) )' />
            </column>
            <_.fcp.ObjectModelTableType.false...column caption='Credit card transactions - India - Simple.csv' datatype='integer' name='[__tableau_internal_object_id__].[Credit card transactions - India - Simple.csv_5A8A56E197A94106B0ED3CADCB5CDF64]' role='measure' type='quantitative' />
            <column caption='City1' datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Ahmedabad, India&quot;' value='&quot;Ahmadabad&quot;' />
                <semantic-value key='&quot;Bahraich, India&quot;' value='&quot;Bahraich&quot;' />
                <semantic-value key='&quot;Bengaluru, India&quot;' value='&quot;Bengaluru&quot;' />
                <semantic-value key='&quot;Changanassery, India&quot;' value='&quot;Changanacheri&quot;' />
                <semantic-value key='&quot;Delhi, India&quot;' value='&quot;New Delhi&quot;' />
                <semantic-value key='&quot;Fazilka, India&quot;' value='&quot;Fazilka&quot;' />
                <semantic-value key='&quot;Greater Mumbai, India&quot;' value='&quot;Mumbai&quot;' />
                <semantic-value key='&quot;Kolkata, India&quot;' value='&quot;Kolkata&quot;' />
                <semantic-value key='&quot;Mahbubnagar, India&quot;' value='&quot;Mahbubnagar&quot;' />
                <semantic-value key='&quot;Tirur, India&quot;' value='&quot;Tirur&quot;' />
              </semantic-values>
            </column>
            <_.fcp.ObjectModelTableType.true...column caption='Credit card transactions - India - Simple.csv' datatype='table' name='[__tableau_internal_object_id__].[Credit card transactions - India - Simple.csv_5A8A56E197A94106B0ED3CADCB5CDF64]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Credit card transactions - India - Simple.csv_5A8A56E197A94106B0ED3CADCB5CDF64]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Credit card transactions - India - Simple.csv_5A8A56E197A94106B0ED3CADCB5CDF64:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Card Type]' derivation='None' name='[none:Card Type:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1n692ox0pj7gxs18jxkcu15thfy1].[Action (Cities)]'>
            <groupfilter function='level-members' level='[City - Split 1]' user:ui-action-filter='[Action3_BFC7D3E6566542D1A3058ECF9BD34563]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1n692ox0pj7gxs18jxkcu15thfy1].[Action (Cities)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1n692ox0pj7gxs18jxkcu15thfy1].[none:Card Type:nk]' value='10' />
            <encoding attr='space' class='1' field='[federated.1n692ox0pj7gxs18jxkcu15thfy1].[__tableau_internal_object_id__].[cnt:Credit card transactions - India - Simple.csv_5A8A56E197A94106B0ED3CADCB5CDF64:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='12' />
            <format attr='background-color' value='#ffff00' />
            <format attr='color' value='#00aa00' />
            <format attr='font-family' value='Wide Latin' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.1n692ox0pj7gxs18jxkcu15thfy1].[none:Card Type:nk]' value='#000000' />
            <format attr='font-size' field='[federated.1n692ox0pj7gxs18jxkcu15thfy1].[none:Card Type:nk]' value='12' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#fefaf1' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#000000' />
            <format attr='font-size' value='9' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.13093923032283783' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#ff9da7' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='240' />
                <format attr='maxwidth' value='240' />
                <format attr='minheight' value='285' />
                <format attr='maxheight' value='285' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1n692ox0pj7gxs18jxkcu15thfy1].[__tableau_internal_object_id__].[cnt:Credit card transactions - India - Simple.csv_5A8A56E197A94106B0ED3CADCB5CDF64:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1n692ox0pj7gxs18jxkcu15thfy1].[__tableau_internal_object_id__].[cnt:Credit card transactions - India - Simple.csv_5A8A56E197A94106B0ED3CADCB5CDF64:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1.1314364671707153' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#ff9da7' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='240' />
                <format attr='maxwidth' value='240' />
                <format attr='minheight' value='285' />
                <format attr='maxheight' value='285' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1n692ox0pj7gxs18jxkcu15thfy1].[__tableau_internal_object_id__].[cnt:Credit card transactions - India - Simple.csv_5A8A56E197A94106B0ED3CADCB5CDF64:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1n692ox0pj7gxs18jxkcu15thfy1].[none:Card Type:nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='bottom' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='0.13093923032283783' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#ff9da7' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='240' />
                <format attr='maxwidth' value='240' />
                <format attr='minheight' value='285' />
                <format attr='maxheight' value='285' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1n692ox0pj7gxs18jxkcu15thfy1].[__tableau_internal_object_id__].[cnt:Credit card transactions - India - Simple.csv_5A8A56E197A94106B0ED3CADCB5CDF64:qk] + [federated.1n692ox0pj7gxs18jxkcu15thfy1].[__tableau_internal_object_id__].[cnt:Credit card transactions - India - Simple.csv_5A8A56E197A94106B0ED3CADCB5CDF64:qk])</rows>
        <cols>[federated.1n692ox0pj7gxs18jxkcu15thfy1].[none:Card Type:nk]</cols>
      </table>
      <simple-id uuid='{D760202B-CFB4-434E-B4F3-431B5767FE66}' />
    </worksheet>
    <worksheet name='Expenditure type'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#00aa00' fontname='Wide Latin'>Expenditure type and amount</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Credit card transactions' name='federated.1n692ox0pj7gxs18jxkcu15thfy1' />
          </datasources>
          <datasource-dependencies datasource='federated.1n692ox0pj7gxs18jxkcu15thfy1'>
            <column datatype='integer' name='[Amount]' role='measure' type='quantitative' />
            <column caption='Gender ' datatype='string' name='[Calculation_85849910205747201]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Gender] = FALSE THEN &quot;Female&quot;&#13;&#10;ELSE &quot;Male&quot;&#13;&#10;END' />
            </column>
            <column caption='Cities' datatype='string' name='[City - Split 1]' role='dimension' semantic-role='[City].[Name]' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1n692ox0pj7gxs18jxkcu15thfy1].[City]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [City], &quot;,&quot;, 1 ) )' />
            </column>
            <column caption='City1' datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Ahmedabad, India&quot;' value='&quot;Ahmadabad&quot;' />
                <semantic-value key='&quot;Bahraich, India&quot;' value='&quot;Bahraich&quot;' />
                <semantic-value key='&quot;Bengaluru, India&quot;' value='&quot;Bengaluru&quot;' />
                <semantic-value key='&quot;Changanassery, India&quot;' value='&quot;Changanacheri&quot;' />
                <semantic-value key='&quot;Delhi, India&quot;' value='&quot;New Delhi&quot;' />
                <semantic-value key='&quot;Fazilka, India&quot;' value='&quot;Fazilka&quot;' />
                <semantic-value key='&quot;Greater Mumbai, India&quot;' value='&quot;Mumbai&quot;' />
                <semantic-value key='&quot;Kolkata, India&quot;' value='&quot;Kolkata&quot;' />
                <semantic-value key='&quot;Mahbubnagar, India&quot;' value='&quot;Mahbubnagar&quot;' />
                <semantic-value key='&quot;Tirur, India&quot;' value='&quot;Tirur&quot;' />
              </semantic-values>
            </column>
            <column caption='Exp Type1' datatype='string' name='[Exp Type]' role='dimension' type='nominal' />
            <column caption='Gender1' datatype='boolean' name='[Gender]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_85849910205747201]' derivation='None' name='[none:Calculation_85849910205747201:nk]' pivot='key' type='nominal' />
            <column-instance column='[Exp Type]' derivation='None' name='[none:Exp Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Amount]' derivation='Sum' name='[pcto:sum:Amount:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Amount]' derivation='Sum' name='[sum:Amount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1n692ox0pj7gxs18jxkcu15thfy1].[Action (Cities)]'>
            <groupfilter function='level-members' level='[City - Split 1]' user:ui-action-filter='[Action3_BFC7D3E6566542D1A3058ECF9BD34563]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1n692ox0pj7gxs18jxkcu15thfy1].[Action (Cities)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='field-labels'>
            <format attr='font-size' value='12' />
            <format attr='background-color' value='#ffff00' />
            <format attr='font-family' value='Wide Latin' />
            <format attr='color' value='#00aa00' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.1n692ox0pj7gxs18jxkcu15thfy1].[none:Exp Type:nk]' value='#000000' />
            <format attr='color' field='[federated.1n692ox0pj7gxs18jxkcu15thfy1].[sum:Amount:qk]' value='#000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#fefaf1' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1n692ox0pj7gxs18jxkcu15thfy1].[none:Exp Type:nk]' />
              <text column='[federated.1n692ox0pj7gxs18jxkcu15thfy1].[pcto:sum:Amount:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1n692ox0pj7gxs18jxkcu15thfy1].[sum:Amount:qk]</rows>
        <cols>([federated.1n692ox0pj7gxs18jxkcu15thfy1].[none:Exp Type:nk] / [federated.1n692ox0pj7gxs18jxkcu15thfy1].[none:Calculation_85849910205747201:nk])</cols>
      </table>
      <simple-id uuid='{4A911C51-661A-4114-BD08-55C60F4753E8}' />
    </worksheet>
    <worksheet name='Line chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#00aa00' fontname='Wide Latin'>Line chart of amount and transaction over time</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Credit card transactions' name='federated.1n692ox0pj7gxs18jxkcu15thfy1' />
          </datasources>
          <datasource-dependencies datasource='federated.1n692ox0pj7gxs18jxkcu15thfy1'>
            <column datatype='integer' name='[Amount]' role='measure' type='quantitative' />
            <column caption='Gender ' datatype='string' name='[Calculation_85849910205747201]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Gender] = FALSE THEN &quot;Female&quot;&#13;&#10;ELSE &quot;Male&quot;&#13;&#10;END' />
            </column>
            <column caption='Cities' datatype='string' name='[City - Split 1]' role='dimension' semantic-role='[City].[Name]' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1n692ox0pj7gxs18jxkcu15thfy1].[City]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [City], &quot;,&quot;, 1 ) )' />
            </column>
            <column caption='City1' datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Ahmedabad, India&quot;' value='&quot;Ahmadabad&quot;' />
                <semantic-value key='&quot;Bahraich, India&quot;' value='&quot;Bahraich&quot;' />
                <semantic-value key='&quot;Bengaluru, India&quot;' value='&quot;Bengaluru&quot;' />
                <semantic-value key='&quot;Changanassery, India&quot;' value='&quot;Changanacheri&quot;' />
                <semantic-value key='&quot;Delhi, India&quot;' value='&quot;New Delhi&quot;' />
                <semantic-value key='&quot;Fazilka, India&quot;' value='&quot;Fazilka&quot;' />
                <semantic-value key='&quot;Greater Mumbai, India&quot;' value='&quot;Mumbai&quot;' />
                <semantic-value key='&quot;Kolkata, India&quot;' value='&quot;Kolkata&quot;' />
                <semantic-value key='&quot;Mahbubnagar, India&quot;' value='&quot;Mahbubnagar&quot;' />
                <semantic-value key='&quot;Tirur, India&quot;' value='&quot;Tirur&quot;' />
              </semantic-values>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <_.fcp.ObjectModelTableType.false...column caption='Credit card transactions - India - Simple.csv' datatype='integer' name='[__tableau_internal_object_id__].[Credit card transactions - India - Simple.csv_5A8A56E197A94106B0ED3CADCB5CDF64]' role='measure' type='quantitative' />
            <column caption='Gender1' datatype='boolean' name='[Gender]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.true...column caption='Credit card transactions - India - Simple.csv' datatype='table' name='[__tableau_internal_object_id__].[Credit card transactions - India - Simple.csv_5A8A56E197A94106B0ED3CADCB5CDF64]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Credit card transactions - India - Simple.csv_5A8A56E197A94106B0ED3CADCB5CDF64]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Credit card transactions - India - Simple.csv_5A8A56E197A94106B0ED3CADCB5CDF64:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_85849910205747201]' derivation='None' name='[none:Calculation_85849910205747201:nk]' pivot='key' type='nominal' />
            <column-instance column='[Amount]' derivation='Sum' name='[sum:Amount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Quarter-Trunc' name='[tqr:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year-Trunc' name='[tyr:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1n692ox0pj7gxs18jxkcu15thfy1].[Action (Cities)]'>
            <groupfilter function='level-members' level='[City - Split 1]' user:ui-action-filter='[Action3_BFC7D3E6566542D1A3058ECF9BD34563]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1n692ox0pj7gxs18jxkcu15thfy1].[tyr:Date:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1n692ox0pj7gxs18jxkcu15thfy1].[tyr:Date:qk]</column>
            <column>[federated.1n692ox0pj7gxs18jxkcu15thfy1].[Action (Cities)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1n692ox0pj7gxs18jxkcu15thfy1].[sum:Amount:qk]' field-type='quantitative' max='372008059' min='150000000' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1n692ox0pj7gxs18jxkcu15thfy1].[__tableau_internal_object_id__].[cnt:Credit card transactions - India - Simple.csv_5A8A56E197A94106B0ED3CADCB5CDF64:qk]' field-type='quantitative' max='2298' min='1000' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='14' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.1n692ox0pj7gxs18jxkcu15thfy1].[sum:Amount:qk]' value='11' />
            <format attr='color' field='[federated.1n692ox0pj7gxs18jxkcu15thfy1].[sum:Amount:qk]' value='#000000' />
            <format attr='color' field='[federated.1n692ox0pj7gxs18jxkcu15thfy1].[tqr:Date:qk]' value='#000000' />
            <format attr='font-size' field='[federated.1n692ox0pj7gxs18jxkcu15thfy1].[tqr:Date:qk]' value='11' />
            <format attr='color' field='[federated.1n692ox0pj7gxs18jxkcu15thfy1].[__tableau_internal_object_id__].[cnt:Credit card transactions - India - Simple.csv_5A8A56E197A94106B0ED3CADCB5CDF64:qk]' value='#000000' />
            <format attr='font-size' field='[federated.1n692ox0pj7gxs18jxkcu15thfy1].[__tableau_internal_object_id__].[cnt:Credit card transactions - India - Simple.csv_5A8A56E197A94106B0ED3CADCB5CDF64:qk]' value='11' />
            <format attr='font-weight' field='[federated.1n692ox0pj7gxs18jxkcu15thfy1].[__tableau_internal_object_id__].[cnt:Credit card transactions - India - Simple.csv_5A8A56E197A94106B0ED3CADCB5CDF64:qk]' value='normal' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#fefaf1' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1n692ox0pj7gxs18jxkcu15thfy1].[none:Calculation_85849910205747201:nk]' />
              <size column='[federated.1n692ox0pj7gxs18jxkcu15thfy1].[sum:Amount:qk]' />
            </encodings>
            <reference-line axis-column='[federated.1n692ox0pj7gxs18jxkcu15thfy1].[sum:Amount:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.1n692ox0pj7gxs18jxkcu15thfy1].[sum:Amount:qk]' z-order='1' />
            <reference-line axis-column='[federated.1n692ox0pj7gxs18jxkcu15thfy1].[sum:Amount:qk]' enable-instant-analytics='true' formula='average' id='refline2' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.1n692ox0pj7gxs18jxkcu15thfy1].[sum:Amount:qk]' z-order='2' />
            <reference-line axis-column='[federated.1n692ox0pj7gxs18jxkcu15thfy1].[__tableau_internal_object_id__].[cnt:Credit card transactions - India - Simple.csv_5A8A56E197A94106B0ED3CADCB5CDF64:qk]' enable-instant-analytics='true' formula='average' id='refline3' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.1n692ox0pj7gxs18jxkcu15thfy1].[__tableau_internal_object_id__].[cnt:Credit card transactions - India - Simple.csv_5A8A56E197A94106B0ED3CADCB5CDF64:qk]' z-order='3' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1n692ox0pj7gxs18jxkcu15thfy1].[sum:Amount:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1n692ox0pj7gxs18jxkcu15thfy1].[none:Calculation_85849910205747201:nk]' />
              <size column='[federated.1n692ox0pj7gxs18jxkcu15thfy1].[sum:Amount:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1n692ox0pj7gxs18jxkcu15thfy1].[__tableau_internal_object_id__].[cnt:Credit card transactions - India - Simple.csv_5A8A56E197A94106B0ED3CADCB5CDF64:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1n692ox0pj7gxs18jxkcu15thfy1].[none:Calculation_85849910205747201:nk]' />
              <size column='[federated.1n692ox0pj7gxs18jxkcu15thfy1].[sum:Amount:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1n692ox0pj7gxs18jxkcu15thfy1].[sum:Amount:qk] + [federated.1n692ox0pj7gxs18jxkcu15thfy1].[__tableau_internal_object_id__].[cnt:Credit card transactions - India - Simple.csv_5A8A56E197A94106B0ED3CADCB5CDF64:qk])</rows>
        <cols>[federated.1n692ox0pj7gxs18jxkcu15thfy1].[tqr:Date:qk]</cols>
      </table>
      <simple-id uuid='{799521BE-0E5F-443C-99B4-410F64E91107}' />
    </worksheet>
    <worksheet name='Map visualization of amount'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#00aa00' fontname='Wide Latin'>Top and Bottom 5 cities by amount</run>
            <run fontalignment='1'>Ã†&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Credit card transactions' name='federated.1n692ox0pj7gxs18jxkcu15thfy1' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1n692ox0pj7gxs18jxkcu15thfy1'>
            <column datatype='integer' name='[Amount]' role='measure' type='quantitative' />
            <column caption='Cities' datatype='string' name='[City - Split 1]' role='dimension' semantic-role='[City].[Name]' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1n692ox0pj7gxs18jxkcu15thfy1].[City]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [City], &quot;,&quot;, 1 ) )' />
            </column>
            <column caption='City1' datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Ahmedabad, India&quot;' value='&quot;Ahmadabad&quot;' />
                <semantic-value key='&quot;Bahraich, India&quot;' value='&quot;Bahraich&quot;' />
                <semantic-value key='&quot;Bengaluru, India&quot;' value='&quot;Bengaluru&quot;' />
                <semantic-value key='&quot;Changanassery, India&quot;' value='&quot;Changanacheri&quot;' />
                <semantic-value key='&quot;Delhi, India&quot;' value='&quot;New Delhi&quot;' />
                <semantic-value key='&quot;Fazilka, India&quot;' value='&quot;Fazilka&quot;' />
                <semantic-value key='&quot;Greater Mumbai, India&quot;' value='&quot;Mumbai&quot;' />
                <semantic-value key='&quot;Kolkata, India&quot;' value='&quot;Kolkata&quot;' />
                <semantic-value key='&quot;Mahbubnagar, India&quot;' value='&quot;Mahbubnagar&quot;' />
                <semantic-value key='&quot;Tirur, India&quot;' value='&quot;Tirur&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Amount]' derivation='Sum' name='[sum:Amount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1n692ox0pj7gxs18jxkcu15thfy1].[Action (Cities)]'>
            <groupfilter function='level-members' level='[City - Split 1]' user:ui-action-filter='[Action3_BFC7D3E6566542D1A3058ECF9BD34563]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1n692ox0pj7gxs18jxkcu15thfy1].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1n692ox0pj7gxs18jxkcu15thfy1].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[federated.1n692ox0pj7gxs18jxkcu15thfy1].[Action (Cities)]</column>
            <column>[federated.1n692ox0pj7gxs18jxkcu15thfy1].[Latitude (generated)]</column>
            <column>[federated.1n692ox0pj7gxs18jxkcu15thfy1].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1n692ox0pj7gxs18jxkcu15thfy1].[Longitude (generated)]' field-type='quantitative' max='12332642.339826819' min='6438445.1770495335' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1n692ox0pj7gxs18jxkcu15thfy1].[Latitude (generated)]' field-type='quantitative' max='4219200.029914923' min='796059.72395441495' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1n692ox0pj7gxs18jxkcu15thfy1].[sum:Amount:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#dadaf2</color>
                <color>#c3c3f3</color>
                <color>#ababf5</color>
                <color>#9393f6</color>
                <color>#7c7cf8</color>
                <color>#6363f9</color>
                <color>#4b4bfa</color>
                <color>#3232fc</color>
                <color>#1919fd</color>
                <color>#0000ff</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#fefaf1' />
            <format attr='omit-on-special' field='[federated.1n692ox0pj7gxs18jxkcu15thfy1].[none:City:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1n692ox0pj7gxs18jxkcu15thfy1].[none:City:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1n692ox0pj7gxs18jxkcu15thfy1].[none:City:nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1n692ox0pj7gxs18jxkcu15thfy1].[sum:Amount:qk]' />
              <text column='[federated.1n692ox0pj7gxs18jxkcu15thfy1].[none:City:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-transparency' value='239' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
                <format attr='has-halo' value='true' />
                <format attr='halo-color' value='#ffff00' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1n692ox0pj7gxs18jxkcu15thfy1].[Latitude (generated)]</rows>
        <cols>[federated.1n692ox0pj7gxs18jxkcu15thfy1].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{0FFFAED1-95C8-4FC8-9B2A-AA81F40BF3F0}' />
    </worksheet>
    <worksheet name='Transactions'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#00aa00' fontname='Wide Latin'>Top and Bottom 5 Transactions by cities</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Credit card transactions' name='federated.1n692ox0pj7gxs18jxkcu15thfy1' />
          </datasources>
          <datasource-dependencies datasource='federated.1n692ox0pj7gxs18jxkcu15thfy1'>
            <column caption='Cities' datatype='string' name='[City - Split 1]' role='dimension' semantic-role='[City].[Name]' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1n692ox0pj7gxs18jxkcu15thfy1].[City]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [City], &quot;,&quot;, 1 ) )' />
            </column>
            <_.fcp.ObjectModelTableType.false...column caption='Credit card transactions - India - Simple.csv' datatype='integer' name='[__tableau_internal_object_id__].[Credit card transactions - India - Simple.csv_5A8A56E197A94106B0ED3CADCB5CDF64]' role='measure' type='quantitative' />
            <column caption='City1' datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Ahmedabad, India&quot;' value='&quot;Ahmadabad&quot;' />
                <semantic-value key='&quot;Bahraich, India&quot;' value='&quot;Bahraich&quot;' />
                <semantic-value key='&quot;Bengaluru, India&quot;' value='&quot;Bengaluru&quot;' />
                <semantic-value key='&quot;Changanassery, India&quot;' value='&quot;Changanacheri&quot;' />
                <semantic-value key='&quot;Delhi, India&quot;' value='&quot;New Delhi&quot;' />
                <semantic-value key='&quot;Fazilka, India&quot;' value='&quot;Fazilka&quot;' />
                <semantic-value key='&quot;Greater Mumbai, India&quot;' value='&quot;Mumbai&quot;' />
                <semantic-value key='&quot;Kolkata, India&quot;' value='&quot;Kolkata&quot;' />
                <semantic-value key='&quot;Mahbubnagar, India&quot;' value='&quot;Mahbubnagar&quot;' />
                <semantic-value key='&quot;Tirur, India&quot;' value='&quot;Tirur&quot;' />
              </semantic-values>
            </column>
            <_.fcp.ObjectModelTableType.true...column caption='Credit card transactions - India - Simple.csv' datatype='table' name='[__tableau_internal_object_id__].[Credit card transactions - India - Simple.csv_5A8A56E197A94106B0ED3CADCB5CDF64]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Credit card transactions - India - Simple.csv_5A8A56E197A94106B0ED3CADCB5CDF64]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Credit card transactions - India - Simple.csv_5A8A56E197A94106B0ED3CADCB5CDF64:qk]' pivot='key' type='quantitative' />
            <column-instance column='[City - Split 1]' derivation='None' name='[none:City - Split 1:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1n692ox0pj7gxs18jxkcu15thfy1].[Set 1]' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1n692ox0pj7gxs18jxkcu15thfy1].[none:City - Split 1:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1n692ox0pj7gxs18jxkcu15thfy1].[__tableau_internal_object_id__].[cnt:Credit card transactions - India - Simple.csv_5A8A56E197A94106B0ED3CADCB5CDF64:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1n692ox0pj7gxs18jxkcu15thfy1].[Set 1]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' value='#555500' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='background-color' value='#ffff00' />
            <format attr='font-family' value='Wide Latin' />
            <format attr='color' value='#00aa00' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.1n692ox0pj7gxs18jxkcu15thfy1].[none:City - Split 1:nk]' value='#aa0000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#fefaf1' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
            <format attr='font-weight' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1n692ox0pj7gxs18jxkcu15thfy1].[__tableau_internal_object_id__].[cnt:Credit card transactions - India - Simple.csv_5A8A56E197A94106B0ED3CADCB5CDF64:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1n692ox0pj7gxs18jxkcu15thfy1].[none:City - Split 1:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{E1E216BD-C5EC-4807-9E49-90238B32AECD}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard '>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='10811' id='3' type-v2='text' w='98442' x='866' y='507'>
          <formatted-text>
            <run fontalignment='1' fontcolor='#00aa00' fontname='Wide Latin' fontsize='15'>Credit card Trends</run>
          </formatted-text>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
            <format attr='background-color' value='#ffff00' />
          </zone-style>
        </zone>
        <zone h='50507' id='4' name='Card Type Payment' show-title='false' w='33247' x='866' y='12162'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
            <format attr='background-color' value='#ffff00fc' />
          </zone-style>
        </zone>
        <zone h='34291' id='5' name='Transactions' show-title='false' w='18095' x='952' y='63851'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
          </zone-style>
        </zone>
        <zone h='33277' id='6' name='Expenditure type' show-title='false' w='45281' x='54113' y='64696'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
          </zone-style>
        </zone>
        <zone h='33277' id='8' name='Map visualization of amount' show-title='false' w='33333' x='19740' y='64358'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
            <format attr='background-color' value='#000000' />
          </zone-style>
        </zone>
        <zone h='50169' id='9' name='Line chart' show-title='false' w='64502' x='34805' y='12162'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
          </zone-style>
        </zone>
        <zone h='10642' id='75' is-scaled='1' param='C:/Users/Abhisekh/Desktop/CERTIFICATES/gold card.jpg' type-v2='bitmap' w='10390' x='2165' y='676' />
        <zone h='10473' id='76' is-scaled='1' param='C:/Users/Abhisekh/Desktop/CERTIFICATES/silver-credit-card-isolated-on-black-vector-19434280.jpg' type-v2='bitmap' w='14113' x='12641' y='676' />
        <zone h='10304' id='77' is-scaled='1' param='C:/Users/Abhisekh/Desktop/CERTIFICATES/platinum.jpg' type-v2='bitmap' w='10649' x='71255' y='676' />
        <zone h='10642' id='78' is-scaled='1' param='C:/Users/Abhisekh/Desktop/CERTIFICATES/signature card.jpg' type-v2='bitmap' w='7879' x='85022' y='507' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1850' minheight='1850' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='108' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97298' id='107' param='vert' type-v2='layout-flow' w='98614' x='693' y='1351'>
                <zone h='10811' id='3' type-v2='text' w='98442' x='866' y='507'>
                  <formatted-text>
                    <run fontalignment='1' fontcolor='#00aa00' fontname='Wide Latin' fontsize='15'>Credit card Trends</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffff00' />
                  </zone-style>
                </zone>
                <zone fixed-size='85' h='10642' id='78' is-fixed='true' is-scaled='1' param='C:/Users/Abhisekh/Desktop/CERTIFICATES/signature card.jpg' type-v2='bitmap' w='7879' x='85022' y='507'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='86' h='10642' id='75' is-fixed='true' is-scaled='1' param='C:/Users/Abhisekh/Desktop/CERTIFICATES/gold card.jpg' type-v2='bitmap' w='10390' x='2165' y='676'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='84' h='10473' id='76' is-fixed='true' is-scaled='1' param='C:/Users/Abhisekh/Desktop/CERTIFICATES/silver-credit-card-isolated-on-black-vector-19434280.jpg' type-v2='bitmap' w='14113' x='12641' y='676'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='83' h='10304' id='77' is-fixed='true' is-scaled='1' param='C:/Users/Abhisekh/Desktop/CERTIFICATES/platinum.jpg' type-v2='bitmap' w='10649' x='71255' y='676'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='50507' id='4' is-fixed='true' name='Card Type Payment' show-title='false' w='33247' x='866' y='12162'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffff00fc' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='50169' id='9' is-fixed='true' name='Line chart' show-title='false' w='64502' x='34805' y='12162'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='272' h='34291' id='5' is-fixed='true' name='Transactions' show-title='false' w='18095' x='952' y='63851'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='264' h='33277' id='8' is-fixed='true' name='Map visualization of amount' show-title='false' w='33333' x='19740' y='64358'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#000000' />
                  </zone-style>
                </zone>
                <zone fixed-size='264' h='33277' id='6' is-fixed='true' name='Expenditure type' show-title='false' w='45281' x='54113' y='64696'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{AF5B3DF6-3AB7-4B29-8B48-61D409E4B5D4}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Card Type Payment'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1n692ox0pj7gxs18jxkcu15thfy1].[none:Card Type:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{852F61EB-B686-469E-8648-69BC012B6E00}' />
    </window>
    <window class='worksheet' name='Transactions'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1n692ox0pj7gxs18jxkcu15thfy1].[Set 1]</field>
            <field>[federated.1n692ox0pj7gxs18jxkcu15thfy1].[none:City - Split 1:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BAED1651-B1D2-427B-A5B5-01A4BF976B7A}' />
    </window>
    <window class='worksheet' name='Expenditure type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1n692ox0pj7gxs18jxkcu15thfy1].[none:Exp Type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1n692ox0pj7gxs18jxkcu15thfy1].[none:Calculation_85849910205747201:nk]</field>
            <field>[federated.1n692ox0pj7gxs18jxkcu15thfy1].[none:Exp Type:nk]</field>
            <field>[federated.1n692ox0pj7gxs18jxkcu15thfy1].[none:Gender:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{72FCB24E-F8D8-4017-8C8E-1A4FE2F05DF1}' />
    </window>
    <window class='worksheet' name='Line chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.1n692ox0pj7gxs18jxkcu15thfy1].[sum:Amount:qk]' type='size' />
            <card pane-specification-id='3' param='[federated.1n692ox0pj7gxs18jxkcu15thfy1].[none:Calculation_85849910205747201:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1n692ox0pj7gxs18jxkcu15thfy1].[mn:Date:ok]</field>
            <field>[federated.1n692ox0pj7gxs18jxkcu15thfy1].[none:AdhocCluster:1:ok]</field>
            <field>[federated.1n692ox0pj7gxs18jxkcu15thfy1].[none:Calculation_85849910205747201:nk]</field>
            <field>[federated.1n692ox0pj7gxs18jxkcu15thfy1].[none:Gender:nk]</field>
            <field>[federated.1n692ox0pj7gxs18jxkcu15thfy1].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AF8AB70B-5080-4613-BA60-D1694CD89ADE}' />
    </window>
    <window class='worksheet' name='Map visualization of amount'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1n692ox0pj7gxs18jxkcu15thfy1].[sum:Amount:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1n692ox0pj7gxs18jxkcu15thfy1].[Set 2]</field>
            <field>[federated.1n692ox0pj7gxs18jxkcu15thfy1].[none:City - Split 1:nk]</field>
            <field>[federated.1n692ox0pj7gxs18jxkcu15thfy1].[none:City:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4630A99A-A614-4288-8873-6A219217E3B7}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard '>
      <viewpoints>
        <viewpoint name='Card Type Payment'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Expenditure type'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Line chart'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Map visualization of amount'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Transactions'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='9' />
      <simple-id uuid='{516D2ABB-4FA3-4FD0-8D6B-85FCE3D21E36}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Card Type Payment' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard ' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Expenditure type' width='192'>
      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
      HUgWhf8P7oA1n0WesvMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Line chart' width='192'>
      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
      ATKb6z7U+3v/AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Map visualization of amount' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Transactions' width='192'>
      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
      ymnM/wOoyEn633qSVwAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
